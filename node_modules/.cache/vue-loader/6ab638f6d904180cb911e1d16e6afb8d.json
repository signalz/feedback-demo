{"remainingRequest":"D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\src\\components\\FeedbackPage.vue?vue&type=template&id=1065dc38&scoped=true&","dependencies":[{"path":"D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\src\\components\\FeedbackPage.vue","mtime":1593589296880},{"path":"D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1593513929337},{"path":"D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1593513961999},{"path":"D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1593513929337},{"path":"D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\node_modules\\vue-loader\\lib\\index.js","mtime":1593513961999}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}