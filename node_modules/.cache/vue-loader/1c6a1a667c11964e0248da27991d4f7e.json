{"remainingRequest":"D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\src\\components\\FeedbackPage.vue?vue&type=style&index=0&id=1065dc38&scoped=true&lang=scss&","dependencies":[{"path":"D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\src\\components\\FeedbackPage.vue","mtime":1593589296880},{"path":"D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\node_modules\\css-loader\\dist\\cjs.js","mtime":1593513960856},{"path":"D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1593513961999},{"path":"D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\node_modules\\postcss-loader\\src\\index.js","mtime":1593513961762},{"path":"D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1593513982988},{"path":"D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1593513929337},{"path":"D:\\Han\\OSDC Dashboard\\source\\github\\feedback-demo\\node_modules\\vue-loader\\lib\\index.js","mtime":1593513961999}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5mZWVkYmFjay1wYWdlLXdyYXBwZXIgew0KICAuZmVlZGJhY2stcGFnZS1jb250ZW50IHsNCiAgICBwYWRkaW5nLXRvcDogNTlweDsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICAmOjpiZWZvcmUgew0KICAgICAgY29udGVudDogIiI7DQogICAgICBwb3NpdGlvbjogZml4ZWQ7DQogICAgICBib3JkZXI6IDJweCBzb2xpZCAjMTY2MTljOw0KICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJGRlc2t0b3Atd2lkdGgpIHsNCiAgICAgICAgbGVmdDogMzAwcHg7DQogICAgICAgIHJpZ2h0OiAwOw0KICAgICAgICB0b3A6IDYwcHg7DQogICAgICAgIGJvdHRvbTogMDsNCiAgICAgIH0NCiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRkZXNrdG9wLXdpZHRoKSB7DQogICAgICAgIGxlZnQ6IDA7DQogICAgICAgIHJpZ2h0OiAwOw0KICAgICAgICB0b3A6IDYwcHg7DQogICAgICAgIGJvdHRvbTogMDsNCiAgICAgIH0NCiAgICB9DQogICAgJjphZnRlciB7DQogICAgICBjb250ZW50OiAiIjsNCiAgICAgIGhlaWdodDogY2FsYygxMDAlIC0gNDBweCk7DQogICAgICBsZWZ0OiBjYWxjKCgxMDAlIC0gMzBweCkgLyAyKTsNCiAgICAgIHdpZHRoOiAycHg7DQogICAgICBiYWNrZ3JvdW5kOiAjMTY2MTljOw0KICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogJHRhYmxldC13aWR0aCkgew0KICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgICB9DQogICAgfQ0KICAgIC5mZWVkYmFjay1wYWdlLWNvbnRlbnQtbGVmdCB7DQogICAgICB3aWR0aDogNTAlOw0KICAgICAgaGVpZ2h0OiAxMDAlOw0KICAgICAgbWFyZ2luOiAwcHggMHB4IDAgMTBweDsNCiAgICAgIHBhZGRpbmctdG9wOiAyMHB4Ow0KICAgICAgcGFkZGluZy1yaWdodDogMTBweDsNCg0KICAgICAgLmZlZWRiYWNrLXBhZ2UtY29udGVudC1sZWZ0LWhlYWRlciB7DQogICAgICAgIEBpbmNsdWRlIGhlYWRlci13cmFwcGVyOw0KDQogICAgICAgIC5mZWVkYmFjay1wYWdlLWNvbnRlbnQtbGVmdC1oZWFkZXItdGV4dCB7DQogICAgICAgICAgQGluY2x1ZGUgaGVhZGVyLXRleHQ7DQogICAgICAgIH0NCg0KICAgICAgICAuZmVlZGJhY2stcGFnZS1jb250ZW50LWxlZnQtaGVhZGVyLW5ldyB7DQogICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsNCiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQoNCiAgICAuZmVlZGJhY2stcGFnZS1jb250ZW50LXJpZ2h0IHsNCiAgICAgIHdpZHRoOiA1MCU7DQogICAgICBoZWlnaHQ6IDEwMCU7DQogICAgICBtaW4taGVpZ2h0OiAxMDAlOw0KICAgICAgbWFyZ2luOiAwcHggMTBweCAwIDEwcHg7DQogICAgICBwYWRkaW5nLXRvcDogMjBweDsNCg0KICAgICAgLmZlZWRiYWNrLXBhZ2UtY29udGVudC1yaWdodC1oZWFkZXIgew0KICAgICAgICBAaW5jbHVkZSBoZWFkZXItd3JhcHBlcjsNCg0KICAgICAgICAuZmVlZGJhY2stcGFnZS1jb250ZW50LXJpZ2h0LWhlYWRlci10ZXh0IHsNCiAgICAgICAgICBAaW5jbHVkZSBoZWFkZXItdGV4dDsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0NCg0KICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICR0YWJsZXQtd2lkdGgpIHsNCiAgICAgIC5mZWVkYmFjay1wYWdlLWNvbnRlbnQtbGVmdCwNCiAgICAgIC5mZWVkYmFjay1wYWdlLWNvbnRlbnQtcmlnaHQgew0KICAgICAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICAgICAgfQ0KICAgIH0NCiAgfQ0KDQogIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRkZXNrdG9wLXdpZHRoKSB7DQogICAgLmZlZWRiYWNrLXBhZ2UtY29udGVudCB7DQogICAgICBtYXJnaW4tbGVmdDogJHNpZGUtbWVudS13aWR0aDsNCiAgICB9DQogIH0NCn0NCg0KLmZlZWRiYWNrLXBhZ2Utd3JhcHBlcjpmb2N1cyB7DQogIG91dGxpbmU6IG5vbmU7DQp9DQo="},{"version":3,"sources":["FeedbackPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmeA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"FeedbackPage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"feedback-page-wrapper\">\r\n    <Menu\r\n      :projects=\"projects\"\r\n      :selectedProject=\"project\"\r\n      @selectProject=\"handleSelectProject\"\r\n      :eventName=\"eventName\"\r\n    />\r\n    <Loading isSpin v-if=\"isLoading\" />\r\n    <mq-layout :mq=\"`${screenBreakpoints.md}+`\">\r\n      <div class=\"feedback-page-content\">\r\n        <div class=\"feedback-page-content-left\">\r\n          <div class=\"feedback-page-content-left-header\">\r\n            <div class=\"feedback-page-content-left-header-text\">{{$t('feedback.feedback')}}</div>\r\n            <Button\r\n              v-if=\"project.id !== defaultValue\"\r\n              type=\"primary\"\r\n              class=\"feedback-page-content-left-header-new\"\r\n              @click=\"onClickNew\"\r\n            >{{$t('feedback.new')}}</Button>\r\n          </div>\r\n          <div class=\"feedback-page-content-left-section\">\r\n            <OverviewTable :sections=\"sections\" v-if=\"project.id === defaultValue\" />\r\n            <ProjectFeedback\r\n              v-if=\"project.id !== defaultValue && feedbackState !== feedbackStates.NO_FEEDBACK\"\r\n              :sections=\"surveySections\"\r\n              :ratings=\"ratings\"\r\n              @ratechange=\"handleRateChange\"\r\n              @submitProject=\"handleSubmitProject\"\r\n              @cancelProject=\"handleCancelProject\"\r\n              :state=\"feedbackState\"\r\n              :event=\"eventName\"\r\n              :review=\"review\"\r\n            />\r\n            <div\r\n              v-if=\"project.id !== defaultValue && feedbackState === feedbackStates.NO_FEEDBACK\"\r\n            >{{$t('feedback.new-feedback')}}</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"feedback-page-content-right\">\r\n          <div class=\"feedback-page-content-right-header\">\r\n            <div class=\"feedback-page-content-right-header-text\">{{$t('feedback.dashboard')}}</div>\r\n          </div>\r\n          <Dashboard\r\n            :key=\"key\"\r\n            :sections=\"sections\"\r\n            :overviewData=\"overviewData\"\r\n            :historyData=\"historyData\"\r\n            @changeOverviewSection=\"changeOverviewSection\"\r\n            @changeHistorySection=\"changeHistorySection\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </mq-layout>\r\n    <mq-layout :mq=\"[screenBreakpoints.xxs, screenBreakpoints.xs, screenBreakpoints.sm]\">\r\n      <div class=\"feedback-page-content\">\r\n        <div class=\"feedback-page-content-left\" v-if=\"showOverview\">\r\n          <div class=\"feedback-page-content-left-header\">\r\n            <div class=\"feedback-page-content-left-header-text\">{{$t('feedback.feedback')}}</div>\r\n            <Button\r\n              v-if=\"project.id !== defaultValue\"\r\n              type=\"primary\"\r\n              class=\"feedback-page-content-left-header-new\"\r\n              @click=\"onClickNew\"\r\n            >{{$t('feedback.new')}}</Button>\r\n            <Button\r\n              type=\"primary\"\r\n              class=\"feedback-page-content-left-header-dashboard\"\r\n              @click=\"onClickChangeSection\"\r\n            >{{$t('feedback.dashboard')}}</Button>\r\n          </div>\r\n          <div class=\"feedback-page-content-left-section\">\r\n            <OverviewTable :sections=\"sections\" v-if=\"project.id === defaultValue\" />\r\n            <ProjectFeedback\r\n              v-if=\"project.id !== defaultValue && feedbackState !== feedbackStates.NO_FEEDBACK\"\r\n              :sections=\"surveySections\"\r\n              :ratings=\"ratings\"\r\n              @ratechange=\"handleRateChange\"\r\n              @submitProject=\"handleSubmitProject\"\r\n              @cancelProject=\"handleCancelProject\"\r\n              :state=\"feedbackState\"\r\n              :event=\"eventName\"\r\n              :review=\"review\"\r\n            />\r\n            <div\r\n              v-if=\"project.id !== defaultValue && feedbackState === feedbackStates.NO_FEEDBACK\"\r\n            >{{$t('feedback.new-feedback')}}</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"feedback-page-content-right\" v-if=\"!showOverview\">\r\n          <div class=\"feedback-page-content-right-header\">\r\n            <div class=\"feedback-page-content-right-header-text\">{{$t('feedback.dashboard')}}</div>\r\n            <Button\r\n              type=\"primary\"\r\n              class=\"feedback-page-content-right-header-feedback\"\r\n              @click=\"onClickChangeSection\"\r\n            >{{$t('feedback.feedback')}}</Button>\r\n          </div>\r\n          <Dashboard\r\n            :sections=\"sections\"\r\n            :overviewData=\"overviewData\"\r\n            :historyData=\"historyData\"\r\n            @changeOverviewSection=\"changeOverviewSection\"\r\n            @changeHistorySection=\"changeHistorySection\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </mq-layout>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { message, Button } from \"ant-design-vue\";\r\nimport moment from \"moment\";\r\n\r\nimport Dashboard from \"./Dashboard\";\r\nimport Loading from \"./Loading\";\r\nimport Menu from \"./Menu\";\r\nimport OverviewTable from \"./OverviewTable\";\r\nimport ProjectFeedback from \"./ProjectFeedback\";\r\n\r\nimport { request } from \"../api\";\r\nimport {\r\n  END_POINT,\r\n  DASHBOARD_LABELS_LIST,\r\n  DEFAULT,\r\n  SCREEN_BREAK_POINTS_DEFINITION,\r\n  RATINGS,\r\n  USER_ID,\r\n  FEEDBACK_STATE\r\n} from \"../config\";\r\n\r\nconst DATE_FORMAT = \"YYYY-MM-DD\";\r\n\r\nexport default {\r\n  name: \"FeedbackPage\",\r\n  components: {\r\n    Button,\r\n    Dashboard,\r\n    Loading,\r\n    Menu,\r\n    OverviewTable,\r\n    ProjectFeedback\r\n  },\r\n  data: () => {\r\n    return {\r\n      projects: [],\r\n      project: {\r\n        id: DEFAULT,\r\n        projectName: DEFAULT\r\n      },\r\n      screenBreakpoints: SCREEN_BREAK_POINTS_DEFINITION,\r\n      defaultValue: DEFAULT,\r\n      sections: [],\r\n      ratings: [],\r\n      surveys: [],\r\n      survey: {},\r\n      message,\r\n      isLoading: true,\r\n      showOverview: true,\r\n      overviewData: [],\r\n      historyData: [],\r\n      surveySections: [],\r\n      feedbackStates: FEEDBACK_STATE,\r\n      feedbackState: FEEDBACK_STATE.NO_FEEDBACK,\r\n      key: Math.random(),\r\n      eventName: \"\",\r\n      review: \"\"\r\n    };\r\n  },\r\n  mounted() {\r\n    Promise.all([\r\n      request(`${END_POINT}/api/projects`),\r\n      request(`${END_POINT}/api/sections`),\r\n      request(`${END_POINT}/api/surveys`),\r\n      request(`${END_POINT}/api/dashboard/projects/summary`, {\r\n        method: \"POST\"\r\n      }),\r\n      request(`${END_POINT}/api/dashboard/projects/history`, {\r\n        method: \"POST\"\r\n      })\r\n    ])\r\n      .then(([projects, sections, surveys, overviewData, historyData]) => {\r\n        if (sections && sections.length > 0) {\r\n          this.sections = sections;\r\n        }\r\n\r\n        this.setOverviewData(overviewData);\r\n        this.setHistoryData([historyData], [{ title: DEFAULT }]);\r\n\r\n        this.ratings = RATINGS;\r\n\r\n        if (projects && projects.length > 0) {\r\n          this.projects = projects;\r\n        }\r\n\r\n        if (surveys && surveys.length > 0) {\r\n          this.surveys = surveys;\r\n        }\r\n\r\n        this.isLoading = false;\r\n      })\r\n      .then(() => this.getOverviewTableData())\r\n      .catch(e => {\r\n        this.isLoading = false;\r\n        this.message.error(e);\r\n      });\r\n  },\r\n  methods: {\r\n    onClickChangeSection() {\r\n      this.showOverview = !this.showOverview;\r\n    },\r\n\r\n    onClickNew() {\r\n      this.feedbackState = FEEDBACK_STATE.NEW_FEEDBACK;\r\n      this.surveySections = this.survey.sections.map(section => {\r\n        return {\r\n          ...section,\r\n          title: this.sections.find(item => item.id === section.sectionId).title\r\n        };\r\n      });\r\n    },\r\n\r\n    setOverviewData(overviewData) {\r\n      if (overviewData) {\r\n        this.overviewData = DASHBOARD_LABELS_LIST.map(\r\n          item => overviewData[item]\r\n        );\r\n      }\r\n    },\r\n\r\n    setHistoryData(historyData, sections) {\r\n      if (historyData && historyData.length > 0) {\r\n        this.historyData = sections.map((section, idx) => ({\r\n          title: section.title,\r\n          data: historyData[idx].sort((a, b) => {\r\n            return moment(a.date, DATE_FORMAT) < moment(b.date, DATE_FORMAT)\r\n              ? -1\r\n              : 1;\r\n          })\r\n        }));\r\n      }\r\n    },\r\n\r\n    getOverviewTableData() {\r\n      if (this.sections.length > 0) {\r\n        this.isLoading = true;\r\n        Promise.all(\r\n          this.sections.map(section =>\r\n            request(`${END_POINT}/api/dashboard/projects/summary`, {\r\n              method: \"POST\",\r\n              body: JSON.stringify({\r\n                sectionId: section.id\r\n              })\r\n            })\r\n          )\r\n        )\r\n          .then(values => {\r\n            this.sections = this.sections.map((section, idx) => ({\r\n              ...section,\r\n              ...values[idx]\r\n            }));\r\n            this.isLoading = false;\r\n          })\r\n          .catch(e => {\r\n            throw e;\r\n          });\r\n      }\r\n    },\r\n\r\n    handleSelectProject({ id }) {\r\n      if (this.project.id === id) {\r\n        return;\r\n      }\r\n      this.isLoading = true;\r\n      if (id === DEFAULT) {\r\n        this.project = {\r\n          id: DEFAULT,\r\n          projectName: DEFAULT\r\n        };\r\n\r\n        Promise.all([\r\n          request(`${END_POINT}/api/dashboard/projects/summary`, {\r\n            method: \"POST\"\r\n          }),\r\n          request(`${END_POINT}/api/dashboard/projects/history`, {\r\n            method: \"POST\"\r\n          })\r\n        ])\r\n          .then(([overviewData, historyData]) => {\r\n            this.setOverviewData(overviewData);\r\n            this.setHistoryData([historyData], [{ title: DEFAULT }]);\r\n            // trigger re-mount overview dashboard\r\n            this.key = Math.random();\r\n            this.isLoading = false;\r\n          })\r\n          .then(() => this.getOverviewTableData())\r\n          .catch(e => {\r\n            this.isLoading = false;\r\n            this.message.error(e);\r\n          });\r\n      } else {\r\n        const selectedProject = this.projects.find(p => p.id === id);\r\n        this.project = {\r\n          projectName: selectedProject.projectName,\r\n          id: selectedProject.id\r\n        };\r\n        if (this.surveys.length > 0) {\r\n          // temporary get survey for project\r\n          const surveyId = this.surveys[0].id;\r\n          Promise.all([\r\n            request(\r\n              `${END_POINT}/api/surveys/${surveyId}/project/${selectedProject.id}`\r\n            ),\r\n            request(\r\n              `${END_POINT}/api/feedbacks/survey/${surveyId}/project/${selectedProject.id}/user/${USER_ID}`\r\n            ),\r\n            request(`${END_POINT}/api/dashboard/projects/summary`, {\r\n              method: \"POST\"\r\n            }),\r\n            request(`${END_POINT}/api/dashboard/projects/history`, {\r\n              method: \"POST\"\r\n            })\r\n          ])\r\n            .then(([survey, feedback, overviewData, historyData]) => {\r\n              this.setOverviewData(overviewData);\r\n              this.setHistoryData([historyData], [{ title: DEFAULT }]);\r\n\r\n              this.survey = { ...survey, id: surveyId };\r\n\r\n              this.surveySections = survey.sections.map(section => {\r\n                return {\r\n                  ...section,\r\n                  title: this.sections.find(\r\n                    item => item.id === section.sectionId\r\n                  ).title\r\n                };\r\n              });\r\n\r\n              if (feedback) {\r\n                this.feedbackState = FEEDBACK_STATE.LAST_FEEDBACK;\r\n                this.review = feedback.review;\r\n                this.eventName = \"\";\r\n\r\n                this.surveySections = this.surveySections.map(section => {\r\n                  return {\r\n                    ...section,\r\n                    questions: section.questions.map(q => {\r\n                      return {\r\n                        ...q,\r\n                        rating: feedback.ratings\r\n                          .find(item => item.sectionId === section.sectionId)\r\n                          .questions.find(\r\n                            item => item.questionId === q.questionId\r\n                          ).rating\r\n                      };\r\n                    })\r\n                  };\r\n                });\r\n              } else {\r\n                this.feedbackState = FEEDBACK_STATE.NO_FEEDBACK;\r\n                this.eventName = \"\";\r\n                this.review = \"\";\r\n              }\r\n              // trigger re-mount overview dashboard\r\n              this.key = Math.random();\r\n              this.isLoading = false;\r\n            })\r\n            .catch(e => {\r\n              this.isLoading = false;\r\n              this.message.error(e);\r\n            });\r\n        } else {\r\n          this.message.error(\"Cannot retrieve survey\");\r\n        }\r\n      }\r\n    },\r\n\r\n    handleRateChange({ sectionId, questionId, rating }) {\r\n      this.surveySections = this.surveySections.map(s => {\r\n        if (s.sectionId === sectionId) {\r\n          return {\r\n            ...s,\r\n            questions: s.questions.map(q => {\r\n              if (q.questionId === questionId) {\r\n                return {\r\n                  ...q,\r\n                  rating\r\n                };\r\n              }\r\n              return q;\r\n            })\r\n          };\r\n        }\r\n        return s;\r\n      });\r\n    },\r\n\r\n    handleSubmitProject({ event, review }) {\r\n      const { project, surveySections } = this;\r\n      this.isLoading = true;\r\n      const requestBody = {\r\n        userId: USER_ID,\r\n        surveyId: this.survey.id,\r\n        projectId: project.id,\r\n        review,\r\n        event,\r\n        ratings: surveySections.map(s => ({\r\n          sectionId: s.sectionId,\r\n          questions: s.questions.map(q => ({\r\n            questionId: q.questionId,\r\n            rating: q.rating\r\n          }))\r\n        }))\r\n      };\r\n\r\n      request(`${END_POINT}/api/feedbacks/submit`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(requestBody)\r\n      })\r\n        .then(() => {\r\n          this.isLoading = false;\r\n          this.eventName = event;\r\n          this.review = review;\r\n          this.feedbackState = FEEDBACK_STATE.LAST_FEEDBACK;\r\n          this.message.success(this.$t(\"feedback.thanks\"));\r\n        })\r\n        .catch(e => {\r\n          this.isLoading = false;\r\n          this.message.error(e);\r\n        });\r\n    },\r\n\r\n    handleCancelProject() {\r\n      this.feedbackState = FEEDBACK_STATE.LAST_FEEDBACK;\r\n    },\r\n\r\n    changeOverviewSection({ sectionId }) {\r\n      this.isLoading = true;\r\n      request(`${END_POINT}/api/dashboard/projects/summary`, {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          sectionId: sectionId === DEFAULT ? null : sectionId,\r\n          projectId: this.project.id === DEFAULT ? null : this.project.id\r\n        })\r\n      })\r\n        .then(data => {\r\n          this.setOverviewData(data);\r\n          this.isLoading = false;\r\n        })\r\n        .catch(e => {\r\n          this.isLoading = false;\r\n          this.message.error(e);\r\n        });\r\n    },\r\n\r\n    changeHistorySection({ sections }) {\r\n      this.isLoading = true;\r\n      Promise.all(\r\n        sections.map(section =>\r\n          request(`${END_POINT}/api/dashboard/projects/history`, {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              sectionId: section.id === DEFAULT ? null : section.id,\r\n              projectId: this.project.id === DEFAULT ? null : this.project.id\r\n            })\r\n          })\r\n        )\r\n      )\r\n        .then(values => {\r\n          this.setHistoryData(values, sections);\r\n          this.isLoading = false;\r\n        })\r\n        .catch(e => {\r\n          this.isLoading = false;\r\n          this.message.error(e);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n.feedback-page-wrapper {\r\n  .feedback-page-content {\r\n    padding-top: 59px;\r\n    display: flex;\r\n    position: relative;\r\n    &::before {\r\n      content: \"\";\r\n      position: fixed;\r\n      border: 2px solid #16619c;\r\n      @media screen and (min-width: $desktop-width) {\r\n        left: 300px;\r\n        right: 0;\r\n        top: 60px;\r\n        bottom: 0;\r\n      }\r\n      @media screen and (max-width: $desktop-width) {\r\n        left: 0;\r\n        right: 0;\r\n        top: 60px;\r\n        bottom: 0;\r\n      }\r\n    }\r\n    &:after {\r\n      content: \"\";\r\n      height: calc(100% - 40px);\r\n      left: calc((100% - 30px) / 2);\r\n      width: 2px;\r\n      background: #16619c;\r\n      @media screen and (min-width: $tablet-width) {\r\n        position: absolute;\r\n      }\r\n    }\r\n    .feedback-page-content-left {\r\n      width: 50%;\r\n      height: 100%;\r\n      margin: 0px 0px 0 10px;\r\n      padding-top: 20px;\r\n      padding-right: 10px;\r\n\r\n      .feedback-page-content-left-header {\r\n        @include header-wrapper;\r\n\r\n        .feedback-page-content-left-header-text {\r\n          @include header-text;\r\n        }\r\n\r\n        .feedback-page-content-left-header-new {\r\n          text-transform: uppercase;\r\n          margin-right: 20px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .feedback-page-content-right {\r\n      width: 50%;\r\n      height: 100%;\r\n      min-height: 100%;\r\n      margin: 0px 10px 0 10px;\r\n      padding-top: 20px;\r\n\r\n      .feedback-page-content-right-header {\r\n        @include header-wrapper;\r\n\r\n        .feedback-page-content-right-header-text {\r\n          @include header-text;\r\n        }\r\n      }\r\n    }\r\n\r\n    @media screen and (max-width: $tablet-width) {\r\n      .feedback-page-content-left,\r\n      .feedback-page-content-right {\r\n        width: 100% !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: $desktop-width) {\r\n    .feedback-page-content {\r\n      margin-left: $side-menu-width;\r\n    }\r\n  }\r\n}\r\n\r\n.feedback-page-wrapper:focus {\r\n  outline: none;\r\n}\r\n</style>\r\n"]}]}